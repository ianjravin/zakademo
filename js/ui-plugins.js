!function (t) { t.fn.fitVids = function (e) { var i = { customSelector: null }, s = document.createElement("div"), n = document.getElementsByTagName("base")[0] || document.getElementsByTagName("script")[0]; return s.className = "fit-vids-style", s.innerHTML = "&shy;<style>               .fluid-width-video-wrapper {                 width: 100%;                              position: relative;                       padding: 0;                            }                                                                                   .fluid-width-video-wrapper iframe,        .fluid-width-video-wrapper object,        .fluid-width-video-wrapper embed {           position: absolute;                       top: 0;                                   left: 0;                                  width: 100%;                              height: 100%;                          }                                       </style>", n.parentNode.insertBefore(s, n), e && t.extend(i, e), this.each(function () { var e = ["iframe[src*='player.vimeo.com']", "iframe[src*='youtube.com']", "iframe[src*='youtube-nocookie.com']", "iframe[src*='kickstarter.com']", "object", "embed"]; i.customSelector && e.push(i.customSelector); var s = t(this).find(e.join(",")); s.each(function () { var e = t(this); if (!("embed" === this.tagName.toLowerCase() && e.parent("object").length || e.parent(".fluid-width-video-wrapper").length)) { var i = "object" === this.tagName.toLowerCase() || e.attr("height") && !isNaN(parseInt(e.attr("height"), 10)) ? parseInt(e.attr("height"), 10) : e.height(), s = isNaN(parseInt(e.attr("width"), 10)) ? e.width() : parseInt(e.attr("width"), 10), n = i / s; if (!e.attr("id")) { var a = "fitvid" + Math.floor(999999 * Math.random()); e.attr("id", a) } e.wrap('<div class="fluid-width-video-wrapper"></div>').parent(".fluid-width-video-wrapper").css("padding-top", 100 * n + "%"), e.removeAttr("height").removeAttr("width") } }) }) } }(jQuery), function (t) { "use strict"; var e = function () { var e = { bcClass: "sf-breadcrumb", menuClass: "sf-js-enabled", anchorClass: "sf-with-ul", menuArrowClass: "sf-arrows" }, i = function () { var e = /iPhone|iPad|iPod/i.test(navigator.userAgent); return e && t(window).load(function () { t("body").children().on("click", t.noop) }), e }(), s = function () { var t = document.documentElement.style; return "behavior" in t && "fill" in t && /iemobile/i.test(navigator.userAgent) }(), n = function (t, i) { var s = e.menuClass; i.cssArrows && (s += " " + e.menuArrowClass), t.toggleClass(s) }, a = function (i, s) { return i.find("li." + s.pathClass).slice(0, s.pathLevels).addClass(s.hoverClass + " " + e.bcClass).filter(function () { return t(this).children(s.popUpSelector).hide().show().length }).removeClass(s.pathClass) }, o = function (t) { t.children("a").toggleClass(e.anchorClass) }, r = function (t) { var e = t.css("ms-touch-action"); e = "pan-y" === e ? "auto" : "pan-y", t.css("ms-touch-action", e) }, l = function (e, n) { var a = "li:has(" + n.popUpSelector + ")"; t.fn.hoverIntent && !n.disableHI ? e.hoverIntent(d, c, a) : e.on("mouseenter.superfish", a, d).on("mouseleave.superfish", a, c); var o = "MSPointerDown.superfish"; i || (o += " touchend.superfish"), s && (o += " mousedown.superfish"), e.on("focusin.superfish", "li", d).on("focusout.superfish", "li", c).on(o, "a", n, h) }, h = function (e) { var i = t(this), s = i.siblings(e.data.popUpSelector); s.length > 0 && s.is(":hidden") && (i.one("click.superfish", !1), "MSPointerDown" === e.type ? i.trigger("focus") : t.proxy(d, i.parent("li"))()) }, d = function () { var e = t(this), i = f(e); clearTimeout(i.sfTimer), e.siblings().superfish("hide").end().superfish("show") }, c = function () { var e = t(this), s = f(e); i ? t.proxy(p, e, s)() : (clearTimeout(s.sfTimer), s.sfTimer = setTimeout(t.proxy(p, e, s), s.delay)) }, p = function (e) { e.retainPath = t.inArray(this[0], e.$path) > -1, this.superfish("hide"), this.parents("." + e.hoverClass).length || (e.onIdle.call(u(this)), e.$path.length && t.proxy(d, e.$path)()) }, u = function (t) { return t.closest("." + e.menuClass) }, f = function (t) { return u(t).data("sf-options") }; return { hide: function (e) { if (this.length) { var i = this, s = f(i); if (!s) return this; var n = s.retainPath === !0 ? s.$path : "", a = i.find("li." + s.hoverClass).add(this).not(n).removeClass(s.hoverClass).children(s.popUpSelector), o = s.speedOut; e && (a.show(), o = 0), s.retainPath = !1, s.onBeforeHide.call(a), a.stop(!0, !0).animate(s.animationOut, o, function () { var e = t(this); s.onHide.call(e) }) } return this }, show: function () { var t = f(this); if (!t) return this; var e = this.addClass(t.hoverClass), i = e.children(t.popUpSelector); return t.onBeforeShow.call(i), i.stop(!0, !0).animate(t.animation, t.speed, function () { t.onShow.call(i) }), this }, destroy: function () { return this.each(function () { var i, s = t(this), a = s.data("sf-options"); return a ? (i = s.find(a.popUpSelector).parent("li"), clearTimeout(a.sfTimer), n(s, a), o(i), r(s), s.off(".superfish").off(".hoverIntent"), i.children(a.popUpSelector).attr("style", function (t, e) { return e.replace(/display[^;]+;?/g, "") }), a.$path.removeClass(a.hoverClass + " " + e.bcClass).addClass(a.pathClass), s.find("." + a.hoverClass).removeClass(a.hoverClass), a.onDestroy.call(s), void s.removeData("sf-options")) : !1 }) }, init: function (i) { return this.each(function () { var s = t(this); if (s.data("sf-options")) return !1; var h = t.extend({}, t.fn.superfish.defaults, i), d = s.find(h.popUpSelector).parent("li"); h.$path = a(s, h), s.data("sf-options", h), n(s, h), o(d), r(s), l(s, h), d.not("." + e.bcClass).superfish("hide", !0), h.onInit.call(this) }) } } }(); t.fn.superfish = function (i) { return e[i] ? e[i].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof i && i ? t.error("Method " + i + " does not exist on jQuery.fn.superfish") : e.init.apply(this, arguments) }, t.fn.superfish.defaults = { popUpSelector: "ul,.sf-mega", hoverClass: "sfHover", pathClass: "overrideThisToUse", pathLevels: 1, delay: 800, animation: { opacity: "show" }, animationOut: { opacity: "hide" }, speed: "normal", speedOut: "fast", cssArrows: !0, disableHI: !1, onInit: t.noop, onBeforeShow: t.noop, onShow: t.noop, onBeforeHide: t.noop, onHide: t.noop, onIdle: t.noop, onDestroy: t.noop }, t.fn.extend({ hideSuperfishUl: e.hide, showSuperfishUl: e.show }) }(jQuery), function (t) { function e(t) { return "object" == typeof t ? t : { top: t, left: t } } var i = t.scrollTo = function (e, i, s) { t(window).scrollTo(e, i, s) }; i.defaults = { axis: "xy", duration: parseFloat(t.fn.jquery) >= 1.3 ? 0 : 1, limit: !0 }, i.window = function (e) { return t(window)._scrollable() }, t.fn._scrollable = function () { return this.map(function () { var e = this, i = !e.nodeName || -1 != t.inArray(e.nodeName.toLowerCase(), ["iframe", "#document", "html", "body"]); if (!i) return e; var s = (e.contentWindow || e).document || e.ownerDocument || e; return /webkit/i.test(navigator.userAgent) || "BackCompat" == s.compatMode ? s.body : s.documentElement }) }, t.fn.scrollTo = function (s, n, a) { return "object" == typeof n && (a = n, n = 0), "function" == typeof a && (a = { onAfter: a }), "max" == s && (s = 9e9), a = t.extend({}, i.defaults, a), n = n || a.duration, a.queue = a.queue && a.axis.length > 1, a.queue && (n /= 2), a.offset = e(a.offset), a.over = e(a.over), this._scrollable().each(function () { function o(t) { h.animate(c, n, a.easing, t && function () { t.call(this, s, a) }) } if (s) { var r, l = this, h = t(l), d = s, c = {}, p = h.is("html,body"); switch (typeof d) { case "number": case "string": if (/^([+-]=)?\d+(\.\d+)?(px|%)?$/.test(d)) { d = e(d); break } if (d = t(d, this), !d.length) return; case "object": (d.is || d.style) && (r = (d = t(d)).offset()) } t.each(a.axis.split(""), function (t, e) { var s = "x" == e ? "Left" : "Top", n = s.toLowerCase(), u = "scroll" + s, f = l[u], m = i.max(l, e); if (r) c[u] = r[n] + (p ? 0 : f - h.offset()[n]), a.margin && (c[u] -= parseInt(d.css("margin" + s)) || 0, c[u] -= parseInt(d.css("border" + s + "Width")) || 0), c[u] += a.offset[n] || 0, a.over[n] && (c[u] += d["x" == e ? "width" : "height"]() * a.over[n]); else { var v = d[n]; c[u] = v.slice && "%" == v.slice(-1) ? parseFloat(v) / 100 * m : v } a.limit && /^\d+$/.test(c[u]) && (c[u] = c[u] <= 0 ? 0 : Math.min(c[u], m)), !t && a.queue && (f != c[u] && o(a.onAfterFirst), delete c[u]) }), o(a.onAfter) } }).end() }, i.max = function (e, i) { var s = "x" == i ? "Width" : "Height", n = "scroll" + s; if (!t(e).is("html,body")) return e[n] - t(e)[s.toLowerCase()](); var a = "client" + s, o = e.ownerDocument.documentElement, r = e.ownerDocument.body; return Math.max(o[n], r[n]) - Math.min(o[a], r[a]) } }(jQuery), function (t) { function e(t, e) { return t.toFixed(e.decimals) } t.fn.countTo = function (e) { return e = e || {}, t(this).each(function () { function i() { d += o, h++, s(d), "function" == typeof n.onUpdate && n.onUpdate.call(r, d), h >= a && (l.removeData("countTo"), clearInterval(c.interval), d = n.to, "function" == typeof n.onComplete && n.onComplete.call(r, d)) } function s(t) { var e = n.formatter.call(r, t, n); l.html(e) } var n = t.extend({}, t.fn.countTo.defaults, { from: t(this).data("from"), to: t(this).data("to"), speed: t(this).data("speed"), refreshInterval: t(this).data("refresh-interval"), decimals: t(this).data("decimals") }, e), a = Math.ceil(n.speed / n.refreshInterval), o = (n.to - n.from) / a, r = this, l = t(this), h = 0, d = n.from, c = l.data("countTo") || {}; l.data("countTo", c), c.interval && clearInterval(c.interval), c.interval = setInterval(i, n.refreshInterval), s(d) }) }, t.fn.countTo.defaults = { from: 0, to: 0, speed: 1e3, refreshInterval: 100, decimals: 0, formatter: e, onUpdate: null, onComplete: null } }(jQuery), !function (t) { "use strict"; t.expr[":"].icontains = function (e, i, s) { return t(e).text().toUpperCase().indexOf(s[3].toUpperCase()) >= 0 }; var e = function (i, s, n) { n && (n.stopPropagation(), n.preventDefault()), this.$element = t(i), this.$newElement = null, this.$button = null, this.$menu = null, this.$lis = null, this.options = s, null === this.options.title && (this.options.title = this.$element.attr("title")), this.val = e.prototype.val, this.render = e.prototype.render, this.refresh = e.prototype.refresh, this.setStyle = e.prototype.setStyle, this.selectAll = e.prototype.selectAll, this.deselectAll = e.prototype.deselectAll, this.destroy = e.prototype.destroy, this.remove = e.prototype.destroy, this.show = e.prototype.show, this.hide = e.prototype.hide, this.init() }; e.VERSION = "1.6.0", e.DEFAULTS = { style: "btn-default", size: "auto", title: null, selectedTextFormat: "values", noneSelectedText: "Nothing selected", noneResultsText: "No results match", countSelectedText: "{0} of {1} selected", maxOptionsText: ["Limit reached ({n} {var} max)", "Group limit reached ({n} {var} max)", ["items", "item"]], width: !1, container: !1, hideDisabled: !1, showSubtext: !1, showIcon: !0, showContent: !0, dropupAuto: !0, header: !1, liveSearch: !1, actionsBox: !1, multipleSeparator: ", ", iconBase: "glyphicon", tickIcon: "glyphicon-ok", maxOptions: !1, mobile: !1 }, e.prototype = { constructor: e, init: function () { var e = this, i = this.$element.attr("id"); this.$element.hide(), this.multiple = this.$element.prop("multiple"), this.autofocus = this.$element.prop("autofocus"), this.$newElement = this.createView(), this.$element.after(this.$newElement), this.$menu = this.$newElement.find("> .dropdown-menu"), this.$button = this.$newElement.find("> button"), this.$searchbox = this.$newElement.find("input"), void 0 !== i && (this.$button.attr("data-id", i), t('label[for="' + i + '"]').click(function (t) { t.preventDefault(), e.$button.focus() })), this.checkDisabled(), this.clickListener(), this.options.liveSearch && this.liveSearchListener(), this.render(), this.liHeight(), this.setStyle(), this.setWidth(), this.options.container && this.selectPosition(), this.$menu.data("this", this), this.$newElement.data("this", this), this.options.mobile && this.mobile() }, createDropdown: function () { var e = this.multiple ? " show-tick" : "", i = this.$element.parent().hasClass("input-group") ? " input-group-btn" : "", s = this.autofocus ? " autofocus" : "", n = this.options.header ? '<div class="popover-title"><button type="button" class="close" aria-hidden="true">&times;</button>' + this.options.header + "</div>" : "", a = this.options.liveSearch ? '<div class="bootstrap-select-searchbox"><input type="text" class="input-block-level form-control" autocomplete="off" /></div>' : "", o = this.options.actionsBox ? '<div class="bs-actionsbox"><div class="btn-group btn-block"><button class="actions-btn bs-select-all btn btn-sm btn-default">Select All</button><button class="actions-btn bs-deselect-all btn btn-sm btn-default">Deselect All</button></div></div>' : "", r = '<div class="btn-group bootstrap-select' + e + i + '"><button type="button" class="btn dropdown-toggle selectpicker" data-toggle="dropdown"' + s + '><span class="filter-option pull-left"></span>&nbsp;<span class="caret"></span></button><div class="dropdown-menu open">' + n + a + o + '<ul class="dropdown-menu inner selectpicker" role="menu"></ul></div></div>'; return t(r) }, createView: function () { var t = this.createDropdown(), e = this.createLi(); return t.find("ul").append(e), t }, reloadLi: function () { this.destroyLi(); var t = this.createLi(); this.$menu.find("ul").append(t) }, destroyLi: function () { this.$menu.find("li").remove() }, createLi: function () { var e = this, i = [], s = "", n = 0; return this.$element.find("option").each(function () { var s = t(this), a = s.attr("class") || "", o = s.attr("style") || "", r = s.data("content") ? s.data("content") : s.html(), l = void 0 !== s.data("subtext") ? '<small class="muted text-muted">' + s.data("subtext") + "</small>" : "", h = void 0 !== s.data("icon") ? '<i class="' + e.options.iconBase + " " + s.data("icon") + '"></i> ' : ""; if ("" !== h && (s.is(":disabled") || s.parent().is(":disabled")) && (h = "<span>" + h + "</span>"), s.data("content") || (r = h + '<span class="text">' + r + l + "</span>"), e.options.hideDisabled && (s.is(":disabled") || s.parent().is(":disabled"))) i.push('<a style="min-height: 0; padding: 0"></a>'); else if (s.parent().is("optgroup") && s.data("divider") !== !0) if (0 === s.index()) { var d = s.parent().attr("label"), c = void 0 !== s.parent().data("subtext") ? '<small class="muted text-muted">' + s.parent().data("subtext") + "</small>" : "", p = s.parent().data("icon") ? '<i class="' + e.options.iconBase + " " + s.parent().data("icon") + '"></i> ' : ""; d = p + '<span class="text">' + d + c + "</span>", n += 1, i.push(0 !== s[0].index ? '<div class="div-contain"><div class="divider"></div></div><dt>' + d + "</dt>" + e.createA(r, "opt " + a, o, n) : "<dt>" + d + "</dt>" + e.createA(r, "opt " + a, o, n)) } else i.push(e.createA(r, "opt " + a, o, n)); else i.push(s.data("divider") === !0 ? '<div class="div-contain"><div class="divider"></div></div>' : t(this).data("hidden") === !0 ? "<a></a>" : e.createA(r, a, o)) }), t.each(i, function (t, e) { var i = "<a></a>" === e ? 'class="hide is-hidden"' : ""; s += '<li rel="' + t + '"' + i + ">" + e + "</li>" }), this.multiple || 0 !== this.$element.find("option:selected").length || this.options.title || this.$element.find("option").eq(0).prop("selected", !0).attr("selected", "selected"), t(s) }, createA: function (t, e, i, s) { return '<a tabindex="0" class="' + e + '" style="' + i + '"' + ("undefined" != typeof s ? 'data-optgroup="' + s + '"' : "") + ">" + t + '<i class="' + this.options.iconBase + " " + this.options.tickIcon + ' icon-ok check-mark"></i></a>' }, render: function (e) { var i = this; e !== !1 && this.$element.find("option").each(function (e) { i.setDisabled(e, t(this).is(":disabled") || t(this).parent().is(":disabled")), i.setSelected(e, t(this).is(":selected")) }), this.tabIndex(); var s = this.$element.find("option:selected").map(function () { var e, s = t(this), n = s.data("icon") && i.options.showIcon ? '<i class="' + i.options.iconBase + " " + s.data("icon") + '"></i> ' : ""; return e = i.options.showSubtext && s.attr("data-subtext") && !i.multiple ? ' <small class="muted text-muted">' + s.data("subtext") + "</small>" : "", s.data("content") && i.options.showContent ? s.data("content") : void 0 !== s.attr("title") ? s.attr("title") : n + s.html() + e }).toArray(), n = this.multiple ? s.join(this.options.multipleSeparator) : s[0]; if (this.multiple && this.options.selectedTextFormat.indexOf("count") > -1) { var a = this.options.selectedTextFormat.split(">"), o = this.options.hideDisabled ? ":not([disabled])" : ""; (a.length > 1 && s.length > a[1] || 1 == a.length && s.length >= 2) && (n = this.options.countSelectedText.replace("{0}", s.length).replace("{1}", this.$element.find('option:not([data-divider="true"], [data-hidden="true"])' + o).length)) } this.options.title = this.$element.attr("title"), "static" == this.options.selectedTextFormat && (n = this.options.title), n || (n = void 0 !== this.options.title ? this.options.title : this.options.noneSelectedText), this.$button.attr("title", t.trim(t("<div/>").html(n).text()).replace(/\s\s+/g, " ")), this.$newElement.find(".filter-option").html(n) }, setStyle: function (t, e) { this.$element.attr("class") && this.$newElement.addClass(this.$element.attr("class").replace(/selectpicker|mobile-device|validate\[.*\]/gi, "")); var i = t ? t : this.options.style; "add" == e ? this.$button.addClass(i) : "remove" == e ? this.$button.removeClass(i) : (this.$button.removeClass(this.options.style), this.$button.addClass(i)) }, liHeight: function () { if (this.options.size !== !1) { var t = this.$menu.parent().clone().find("> .dropdown-toggle").prop("autofocus", !1).end().appendTo("body"), e = t.addClass("open").find("> .dropdown-menu"), i = e.find("li > a").outerHeight(), s = this.options.header ? e.find(".popover-title").outerHeight() : 0, n = this.options.liveSearch ? e.find(".bootstrap-select-searchbox").outerHeight() : 0, a = this.options.actionsBox ? e.find(".bs-actionsbox").outerHeight() : 0; t.remove(), this.$newElement.data("liHeight", i).data("headerHeight", s).data("searchHeight", n).data("actionsHeight", a) } }, setSize: function () { var e, i, s, n = this, a = this.$menu, o = a.find(".inner"), r = this.$newElement.outerHeight(), l = this.$newElement.data("liHeight"), h = this.$newElement.data("headerHeight"), d = this.$newElement.data("searchHeight"), c = this.$newElement.data("actionsHeight"), p = a.find("li .divider").outerHeight(!0), u = parseInt(a.css("padding-top")) + parseInt(a.css("padding-bottom")) + parseInt(a.css("border-top-width")) + parseInt(a.css("border-bottom-width")), f = this.options.hideDisabled ? ":not(.disabled)" : "", m = t(window), v = u + parseInt(a.css("margin-top")) + parseInt(a.css("margin-bottom")) + 2, g = function () { i = n.$newElement.offset().top - m.scrollTop(), s = m.height() - i - r }; if (g(), this.options.header && a.css("padding-top", 0), "auto" == this.options.size) { var b = function () { var t, r = n.$lis.not(".hide"); g(), e = s - v, n.options.dropupAuto && n.$newElement.toggleClass("dropup", i > s && e - v < a.height()), n.$newElement.hasClass("dropup") && (e = i - v), t = r.length + r.find("dt").length > 3 ? 3 * l + v - 2 : 0, a.css({ "max-height": e + "px", overflow: "hidden", "min-height": t + h + d + c + "px" }), o.css({ "max-height": e - h - d - c - u + "px", "overflow-y": "auto", "min-height": Math.max(t - u, 0) + "px" }) }; b(), this.$searchbox.off("input.getSize propertychange.getSize").on("input.getSize propertychange.getSize", b), t(window).off("resize.getSize").on("resize.getSize", b), t(window).off("scroll.getSize").on("scroll.getSize", b) } else if (this.options.size && "auto" != this.options.size && a.find("li" + f).length > this.options.size) { var w = a.find("li" + f + " > *").not(".div-contain").slice(0, this.options.size).last().parent().index(), y = a.find("li").slice(0, w + 1).find(".div-contain").length; e = l * this.options.size + y * p + u, n.options.dropupAuto && this.$newElement.toggleClass("dropup", i > s && e < a.height()), a.css({ "max-height": e + h + d + c + "px", overflow: "hidden" }), o.css({ "max-height": e - u + "px", "overflow-y": "auto" }) } }, setWidth: function () { if ("auto" == this.options.width) { this.$menu.css("min-width", "0"); var t = this.$newElement.clone().appendTo("body"), e = t.find("> .dropdown-menu").css("width"), i = t.css("width", "auto").find("> button").css("width"); t.remove(), this.$newElement.css("width", Math.max(parseInt(e), parseInt(i)) + "px") } else "fit" == this.options.width ? (this.$menu.css("min-width", ""), this.$newElement.css("width", "").addClass("fit-width")) : this.options.width ? (this.$menu.css("min-width", ""), this.$newElement.css("width", this.options.width)) : (this.$menu.css("min-width", ""), this.$newElement.css("width", "")); this.$newElement.hasClass("fit-width") && "fit" !== this.options.width && this.$newElement.removeClass("fit-width") }, selectPosition: function () { var e, i, s = this, n = "<div />", a = t(n), o = function (t) { a.addClass(t.attr("class").replace(/form-control/gi, "")).toggleClass("dropup", t.hasClass("dropup")), e = t.offset(), i = t.hasClass("dropup") ? 0 : t[0].offsetHeight, a.css({ top: e.top + i, left: e.left, width: t[0].offsetWidth, position: "absolute" }) }; this.$newElement.on("click", function () { s.isDisabled() || (o(t(this)), a.appendTo(s.options.container), a.toggleClass("open", !t(this).hasClass("open")), a.append(s.$menu)) }), t(window).resize(function () { o(s.$newElement) }), t(window).on("scroll", function () { o(s.$newElement) }), t("html").on("click", function (e) { t(e.target).closest(s.$newElement).length < 1 && a.removeClass("open") }) }, mobile: function () { this.$element.addClass("mobile-device").appendTo(this.$newElement), this.options.container && this.$menu.hide() }, refresh: function () { this.$lis = null, this.reloadLi(), this.render(), this.setWidth(), this.setStyle(), this.checkDisabled(), this.liHeight() }, update: function () { this.reloadLi(), this.setWidth(), this.setStyle(), this.checkDisabled(), this.liHeight() }, setSelected: function (e, i) { null == this.$lis && (this.$lis = this.$menu.find("li")), t(this.$lis[e]).toggleClass("selected", i) }, setDisabled: function (e, i) { null == this.$lis && (this.$lis = this.$menu.find("li")), i ? t(this.$lis[e]).addClass("disabled").find("a").attr("href", "#").attr("tabindex", -1) : t(this.$lis[e]).removeClass("disabled").find("a").removeAttr("href").attr("tabindex", 0) }, isDisabled: function () { return this.$element.is(":disabled") }, checkDisabled: function () { var t = this; this.isDisabled() ? this.$button.addClass("disabled").attr("tabindex", -1) : (this.$button.hasClass("disabled") && this.$button.removeClass("disabled"), -1 == this.$button.attr("tabindex") && (this.$element.data("tabindex") || this.$button.removeAttr("tabindex"))), this.$button.click(function () { return !t.isDisabled() }) }, tabIndex: function () { this.$element.is("[tabindex]") && (this.$element.data("tabindex", this.$element.attr("tabindex")), this.$button.attr("tabindex", this.$element.data("tabindex"))) }, clickListener: function () { var e = this; this.$newElement.on("touchstart.dropdown", ".dropdown-menu", function (t) { t.stopPropagation() }), this.$newElement.on("click", function () { e.setSize(), e.options.liveSearch || e.multiple || setTimeout(function () { e.$menu.find(".selected a").focus() }, 10) }), this.$menu.on("click", "li a", function (i) { var s = t(this).parent().index(), n = e.$element.val(), a = e.$element.prop("selectedIndex"); if (e.multiple && i.stopPropagation(), i.preventDefault(), !e.isDisabled() && !t(this).parent().hasClass("disabled")) { var o = e.$element.find("option"), r = o.eq(s), l = r.prop("selected"), h = r.parent("optgroup"), d = e.options.maxOptions, c = h.data("maxOptions") || !1; if (e.multiple) { if (r.prop("selected", !l), e.setSelected(s, !l), t(this).blur(), d !== !1 || c !== !1) { var p = d < o.filter(":selected").length, u = c < h.find("option:selected").length, f = e.options.maxOptionsText, m = f[0].replace("{n}", d), v = f[1].replace("{n}", c), g = t('<div class="notify"></div>'); if (d && p || c && u) if (d && 1 == d) o.prop("selected", !1), r.prop("selected", !0), e.$menu.find(".selected").removeClass("selected"), e.setSelected(s, !0); else if (c && 1 == c) { h.find("option:selected").prop("selected", !1), r.prop("selected", !0); var b = t(this).data("optgroup"); e.$menu.find(".selected").has('a[data-optgroup="' + b + '"]').removeClass("selected"), e.setSelected(s, !0) } else f[2] && (m = m.replace("{var}", f[2][d > 1 ? 0 : 1]), v = v.replace("{var}", f[2][c > 1 ? 0 : 1])), r.prop("selected", !1), e.$menu.append(g), d && p && (g.append(t("<div>" + m + "</div>")), e.$element.trigger("maxReached.bs.select")), c && u && (g.append(t("<div>" + v + "</div>")), e.$element.trigger("maxReachedGrp.bs.select")), setTimeout(function () { e.setSelected(s, !1) }, 10), g.delay(750).fadeOut(300, function () { t(this).remove() }) } } else o.prop("selected", !1), r.prop("selected", !0), e.$menu.find(".selected").removeClass("selected"), e.setSelected(s, !0); e.multiple ? e.options.liveSearch && e.$searchbox.focus() : e.$button.focus(), (n != e.$element.val() && e.multiple || a != e.$element.prop("selectedIndex") && !e.multiple) && e.$element.change() } }), this.$menu.on("click", "li.disabled a, li dt, li .div-contain, .popover-title, .popover-title :not(.close)", function (t) { t.target == this && (t.preventDefault(), t.stopPropagation(), e.options.liveSearch ? e.$searchbox.focus() : e.$button.focus()) }), this.$menu.on("click", ".popover-title .close", function () { e.$button.focus() }), this.$searchbox.on("click", function (t) { t.stopPropagation() }), this.$menu.on("click", ".actions-btn", function (i) { e.options.liveSearch ? e.$searchbox.focus() : e.$button.focus(), i.preventDefault(), i.stopPropagation(), t(this).is(".bs-select-all") ? e.selectAll() : e.deselectAll(), e.$element.change() }), this.$element.change(function () { e.render(!1) }) }, liveSearchListener: function () { var e = this, i = t('<li class="no-results"></li>'); this.$newElement.on("click.dropdown.data-api", function () { e.$menu.find(".active").removeClass("active"), e.$searchbox.val() && (e.$searchbox.val(""), e.$lis.not(".is-hidden").removeClass("hide"), i.parent().length && i.remove()), e.multiple || e.$menu.find(".selected").addClass("active"), setTimeout(function () { e.$searchbox.focus() }, 10) }), this.$searchbox.on("input propertychange", function () { e.$searchbox.val() ? (e.$lis.not(".is-hidden").removeClass("hide").find("a").not(":icontains(" + e.$searchbox.val() + ")").parent().addClass("hide"), e.$menu.find("li").filter(":visible:not(.no-results)").length ? i.parent().length && i.remove() : (i.parent().length && i.remove(), i.html(e.options.noneResultsText + ' "' + e.$searchbox.val() + '"').show(), e.$menu.find("li").last().after(i))) : (e.$lis.not(".is-hidden").removeClass("hide"), i.parent().length && i.remove()), e.$menu.find("li.active").removeClass("active"), e.$menu.find("li").filter(":visible:not(.divider)").eq(0).addClass("active").find("a").focus(), t(this).focus() }), this.$menu.on("mouseenter", "a", function (i) { e.$menu.find(".active").removeClass("active"), t(i.currentTarget).parent().not(".disabled").addClass("active") }), this.$menu.on("mouseleave", "a", function () { e.$menu.find(".active").removeClass("active") }) }, val: function (t) { return void 0 !== t ? (this.$element.val(t), this.$element.change(), this.render(), this.$element) : this.$element.val() }, selectAll: function () { null == this.$lis && (this.$lis = this.$menu.find("li")), this.$element.find("option:enabled").prop("selected", !0), t(this.$lis).not(".disabled").addClass("selected"), this.render(!1) }, deselectAll: function () { null == this.$lis && (this.$lis = this.$menu.find("li")), this.$element.find("option:enabled").prop("selected", !1), t(this.$lis).not(".disabled").removeClass("selected"), this.render(!1) }, keydown: function (e) { var i, s, n, a, o, r, l, h, d, c, p, u, f = { 32: " ", 48: "0", 49: "1", 50: "2", 51: "3", 52: "4", 53: "5", 54: "6", 55: "7", 56: "8", 57: "9", 59: ";", 65: "a", 66: "b", 67: "c", 68: "d", 69: "e", 70: "f", 71: "g", 72: "h", 73: "i", 74: "j", 75: "k", 76: "l", 77: "m", 78: "n", 79: "o", 80: "p", 81: "q", 82: "r", 83: "s", 84: "t", 85: "u", 86: "v", 87: "w", 88: "x", 89: "y", 90: "z", 96: "0", 97: "1", 98: "2", 99: "3", 100: "4", 101: "5", 102: "6", 103: "7", 104: "8", 105: "9" }; if (i = t(this), n = i.parent(), i.is("input") && (n = i.parent().parent()), c = n.data("this"), c.options.liveSearch && (n = i.parent().parent()), c.options.container && (n = c.$menu), s = t("[role=menu] li:not(.divider) a", n), u = c.$menu.parent().hasClass("open"), !u && /([0-9]|[A-z])/.test(String.fromCharCode(e.keyCode)) && (c.options.container ? c.$newElement.trigger("click") : (c.setSize(), c.$menu.parent().addClass("open"), u = !0), c.$searchbox.focus()), c.options.liveSearch && (/(^9$|27)/.test(e.keyCode.toString(10)) && u && 0 === c.$menu.find(".active").length && (e.preventDefault(), c.$menu.parent().removeClass("open"), c.$button.focus()), s = t("[role=menu] li:not(.divider):visible", n), i.val() || /(38|40)/.test(e.keyCode.toString(10)) || 0 === s.filter(".active").length && (s = c.$newElement.find("li").filter(":icontains(" + f[e.keyCode] + ")"))), s.length) { if (/(38|40)/.test(e.keyCode.toString(10))) a = s.index(s.filter(":focus")), r = s.parent(":not(.disabled):visible").first().index(), l = s.parent(":not(.disabled):visible").last().index(), o = s.eq(a).parent().nextAll(":not(.disabled):visible").eq(0).index(), h = s.eq(a).parent().prevAll(":not(.disabled):visible").eq(0).index(), d = s.eq(o).parent().prevAll(":not(.disabled):visible").eq(0).index(), c.options.liveSearch && (s.each(function (e) { t(this).is(":not(.disabled)") && t(this).data("index", e) }), a = s.index(s.filter(".active")), r = s.filter(":not(.disabled):visible").first().data("index"), l = s.filter(":not(.disabled):visible").last().data("index"), o = s.eq(a).nextAll(":not(.disabled):visible").eq(0).data("index"), h = s.eq(a).prevAll(":not(.disabled):visible").eq(0).data("index"), d = s.eq(o).prevAll(":not(.disabled):visible").eq(0).data("index")), p = i.data("prevIndex"), 38 == e.keyCode && (c.options.liveSearch && (a -= 1), a != d && a > h && (a = h), r > a && (a = r), a == p && (a = l)), 40 == e.keyCode && (c.options.liveSearch && (a += 1), -1 == a && (a = 0), a != d && o > a && (a = o), a > l && (a = l), a == p && (a = r)), i.data("prevIndex", a), c.options.liveSearch ? (e.preventDefault(), i.is(".dropdown-toggle") || (s.removeClass("active"), s.eq(a).addClass("active").find("a").focus(), i.focus())) : s.eq(a).focus(); else if (!i.is("input")) { var m, v, g = []; s.each(function () { t(this).parent().is(":not(.disabled)") && t.trim(t(this).text().toLowerCase()).substring(0, 1) == f[e.keyCode] && g.push(t(this).parent().index()) }), m = t(document).data("keycount"), m++, t(document).data("keycount", m), v = t.trim(t(":focus").text().toLowerCase()).substring(0, 1), v != f[e.keyCode] ? (m = 1, t(document).data("keycount", m)) : m >= g.length && (t(document).data("keycount", 0), m > g.length && (m = 1)), s.eq(g[m - 1]).focus() } /(13|32) /.test(e.keyCode.toString(10)) && u && (/(32)/.test(e.keyCode.toString(10)) || e.preventDefault(), c.options.liveSearch ? /(32)/.test(e.keyCode.toString(10)) || (c.$menu.find(".active a").click(), i.focus()) : t(":focus").click(), t(document).data("keycount", 0)), (/(^9$|27)/.test(e.keyCode.toString(10)) && u && (c.multiple || c.options.liveSearch) || /(27)/.test(e.keyCode.toString(10)) && !u) && (c.$menu.parent().removeClass("open"), c.$button.focus()) } }, hide: function () { this.$newElement.hide() }, show: function () { this.$newElement.show() }, destroy: function () { this.$newElement.remove(), this.$element.remove() } }, t.fn.selectpicker = function (i, s) { var n, a = arguments, o = this.each(function () { if (t(this).is("select")) { var o = t(this), r = o.data("selectpicker"), l = "object" == typeof i && i; if (r) { if (l) for (var h in l) l.hasOwnProperty(h) && (r.options[h] = l[h]) } else o.data("selectpicker", r = new e(this, t.extend({}, e.DEFAULTS, t.fn.selectpicker.defaults || {}, o.data(), l), s)); if ("string" == typeof i) { var d = i; r[d] instanceof Function ? ([].shift.apply(a), n = r[d].apply(r, a)) : n = r.options[d] } } }); return "undefined" != typeof n ? n : o }, t.fn.selectpicker.Constructor = e, t(document).data("keycount", 0).on("keydown", ".bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=menu], .bootstrap-select-searchbox input", e.prototype.keydown).on("focusin.modal", ".bootstrap-select [data-toggle=dropdown], .bootstrap-select [role=menu], .bootstrap-select-searchbox input", function (t) { t.stopPropagation() }) }(jQuery), !function (t) {
    function e() { return new Date(Date.UTC.apply(Date, arguments)) } var i = function (e, i) {
        var a = this; switch (this.element = t(e), this.language = i.language || this.element.data("date-language") || "en", this.language = this.language in s ? this.language : "en", this.isRTL = s[this.language].rtl || !1, this.format = n.parseFormat(i.format || this.element.data("date-format") || "mm/dd/yyyy"), this.isInline = !1, this.isInput = this.element.is("input"), this.component = this.element.is(".date") ? this.element.find(".add-on") : !1, this.hasInput = this.component && this.element.find("input").length, this.component && 0 === this.component.length && (this.component = !1), this._attachEvents(), this.forceParse = !0, "forceParse" in i ? this.forceParse = i.forceParse : "dateForceParse" in this.element.data() && (this.forceParse = this.element.data("date-force-parse")), this.picker = t(n.template).appendTo(this.isInline ? this.element : "body").on({ click: t.proxy(this.click, this), mousedown: t.proxy(this.mousedown, this) }), this.isInline ? this.picker.addClass("datepicker-inline") : this.picker.addClass("datepicker-dropdown dropdown-menu"), this.isRTL && (this.picker.addClass("datepicker-rtl"), this.picker.find(".prev i, .next i").toggleClass("icon-arrow-left icon-arrow-right")), t(document).on("mousedown", function (e) { 0 === t(e.target).closest(".datepicker").length && a.hide() }), this.autoclose = !1, "autoclose" in i ? this.autoclose = i.autoclose : "dateAutoclose" in this.element.data() && (this.autoclose = this.element.data("date-autoclose")), this.keyboardNavigation = !0, "keyboardNavigation" in i ? this.keyboardNavigation = i.keyboardNavigation : "dateKeyboardNavigation" in this.element.data() && (this.keyboardNavigation = this.element.data("date-keyboard-navigation")), this.viewMode = this.startViewMode = 0, i.startView || this.element.data("date-start-view")) { case 2: case "decade": this.viewMode = this.startViewMode = 2; break; case 1: case "year": this.viewMode = this.startViewMode = 1 } this.todayBtn = i.todayBtn || this.element.data("date-today-btn") || !1, this.todayHighlight = i.todayHighlight || this.element.data("date-today-highlight") || !1, this.weekStart = (i.weekStart || this.element.data("date-weekstart") || s[this.language].weekStart || 0) % 7, this.weekEnd = (this.weekStart + 6) % 7, this.startDate = -(1 / 0), this.endDate = 1 / 0, this.daysOfWeekDisabled = [], this.setStartDate(i.startDate || this.element.data("date-startdate")), this.setEndDate(i.endDate || this.element.data("date-enddate")),
        this.setDaysOfWeekDisabled(i.daysOfWeekDisabled || this.element.data("date-days-of-week-disabled")), this.fillDow(), this.fillMonths(), this.update(), this.showMode(), this.isInline && this.show()
    }; i.prototype = { constructor: i, _events: [], _attachEvents: function () { this._detachEvents(), this.isInput ? this._events = [[this.element, { focus: t.proxy(this.show, this), keyup: t.proxy(this.update, this), keydown: t.proxy(this.keydown, this) }]] : this.component && this.hasInput ? this._events = [[this.element.find("input"), { focus: t.proxy(this.show, this), keyup: t.proxy(this.update, this), keydown: t.proxy(this.keydown, this) }], [this.component, { click: t.proxy(this.show, this) }]] : this.element.is("div") ? this.isInline = !0 : this._events = [[this.element, { click: t.proxy(this.show, this) }]]; for (var e, i, s = 0; s < this._events.length; s++) e = this._events[s][0], i = this._events[s][1], e.on(i) }, _detachEvents: function () { for (var t, e, i = 0; i < this._events.length; i++) t = this._events[i][0], e = this._events[i][1], t.off(e); this._events = [] }, show: function (e) { this.picker.show(), this.height = this.component ? this.component.outerHeight() : this.element.outerHeight(), this.update(), this.place(), t(window).on("resize", t.proxy(this.place, this)), e && (e.stopPropagation(), e.preventDefault()), this.element.trigger({ type: "show", date: this.date }) }, hide: function (e) { this.isInline || (this.picker.hide(), t(window).off("resize", this.place), this.viewMode = this.startViewMode, this.showMode(), this.isInput || t(document).off("mousedown", this.hide), this.forceParse && (this.isInput && this.element.val() || this.hasInput && this.element.find("input").val()) && this.setValue(), this.element.trigger({ type: "hide", date: this.date })) }, remove: function () { this._detachEvents(), this.picker.remove(), delete this.element.data().datepicker }, getDate: function () { var t = this.getUTCDate(); return new Date(t.getTime() + 6e4 * t.getTimezoneOffset()) }, getUTCDate: function () { return this.date }, setDate: function (t) { this.setUTCDate(new Date(t.getTime() - 6e4 * t.getTimezoneOffset())) }, setUTCDate: function (t) { this.date = t, this.setValue() }, setValue: function () { var t = this.getFormattedDate(); this.isInput ? this.element.val(t) : (this.component && this.element.find("input").val(t), this.element.data("date", t)) }, getFormattedDate: function (t) { return void 0 === t && (t = this.format), n.formatDate(this.date, t, this.language) }, setStartDate: function (t) { this.startDate = t || -(1 / 0), this.startDate !== -(1 / 0) && (this.startDate = n.parseDate(this.startDate, this.format, this.language)), this.update(), this.updateNavArrows() }, setEndDate: function (t) { this.endDate = t || 1 / 0, this.endDate !== 1 / 0 && (this.endDate = n.parseDate(this.endDate, this.format, this.language)), this.update(), this.updateNavArrows() }, setDaysOfWeekDisabled: function (e) { this.daysOfWeekDisabled = e || [], t.isArray(this.daysOfWeekDisabled) || (this.daysOfWeekDisabled = this.daysOfWeekDisabled.split(/,\s*/)), this.daysOfWeekDisabled = t.map(this.daysOfWeekDisabled, function (t) { return parseInt(t, 10) }), this.update(), this.updateNavArrows() }, place: function () { if (!this.isInline) { var e = parseInt(this.element.parents().filter(function () { return "auto" != t(this).css("z-index") }).first().css("z-index")) + 10, i = this.component ? this.component.offset() : this.element.offset(), s = this.component ? this.component.outerHeight(!0) : this.element.outerHeight(!0); this.picker.css({ top: i.top + s, left: i.left, zIndex: e }) } }, update: function () { var t, e = !1; arguments && arguments.length && ("string" == typeof arguments[0] || arguments[0] instanceof Date) ? (t = arguments[0], e = !0) : t = this.isInput ? this.element.val() : this.element.data("date") || this.element.find("input").val(), this.date = n.parseDate(t, this.format, this.language), e && this.setValue(); var i = this.viewDate; this.date < this.startDate ? this.viewDate = new Date(this.startDate) : this.date > this.endDate ? this.viewDate = new Date(this.endDate) : this.viewDate = new Date(this.date), i && i.getTime() != this.viewDate.getTime() && this.element.trigger({ type: "changeDate", date: this.viewDate }), this.fill() }, fillDow: function () { for (var t = this.weekStart, e = "<tr>"; t < this.weekStart + 7;) e += '<th class="dow">' + s[this.language].daysMin[t++ % 7] + "</th>"; e += "</tr>", this.picker.find(".datepicker-days thead").append(e) }, fillMonths: function () { for (var t = "", e = 0; 12 > e;) t += '<span class="month">' + s[this.language].monthsShort[e++] + "</span>"; this.picker.find(".datepicker-months td").html(t) }, fill: function () { var i = new Date(this.viewDate), a = i.getUTCFullYear(), o = i.getUTCMonth(), r = this.startDate !== -(1 / 0) ? this.startDate.getUTCFullYear() : -(1 / 0), l = this.startDate !== -(1 / 0) ? this.startDate.getUTCMonth() : -(1 / 0), h = this.endDate !== 1 / 0 ? this.endDate.getUTCFullYear() : 1 / 0, d = this.endDate !== 1 / 0 ? this.endDate.getUTCMonth() : 1 / 0, c = this.date && this.date.valueOf(), p = new Date; this.picker.find(".datepicker-days thead th:eq(1)").text(s[this.language].months[o] + " " + a), this.picker.find("tfoot th.today").text(s[this.language].today).toggle(this.todayBtn !== !1), this.updateNavArrows(), this.fillMonths(); var u = e(a, o - 1, 28, 0, 0, 0, 0), f = n.getDaysInMonth(u.getUTCFullYear(), u.getUTCMonth()); u.setUTCDate(f), u.setUTCDate(f - (u.getUTCDay() - this.weekStart + 7) % 7); var m = new Date(u); m.setUTCDate(m.getUTCDate() + 42), m = m.valueOf(); for (var v, g = []; u.valueOf() < m;) u.getUTCDay() == this.weekStart && g.push("<tr>"), v = "", u.getUTCFullYear() < a || u.getUTCFullYear() == a && u.getUTCMonth() < o ? v += " old" : (u.getUTCFullYear() > a || u.getUTCFullYear() == a && u.getUTCMonth() > o) && (v += " new"), this.todayHighlight && u.getUTCFullYear() == p.getFullYear() && u.getUTCMonth() == p.getMonth() && u.getUTCDate() == p.getDate() && (v += " today"), c && u.valueOf() == c && (v += " active"), (u.valueOf() < this.startDate || u.valueOf() > this.endDate || -1 !== t.inArray(u.getUTCDay(), this.daysOfWeekDisabled)) && (v += " disabled"), g.push('<td class="day' + v + '">' + u.getUTCDate() + "</td>"), u.getUTCDay() == this.weekEnd && g.push("</tr>"), u.setUTCDate(u.getUTCDate() + 1); this.picker.find(".datepicker-days tbody").empty().append(g.join("")); var b = this.date && this.date.getUTCFullYear(), w = this.picker.find(".datepicker-months").find("th:eq(1)").text(a).end().find("span").removeClass("active"); b && b == a && w.eq(this.date.getUTCMonth()).addClass("active"), (r > a || a > h) && w.addClass("disabled"), a == r && w.slice(0, l).addClass("disabled"), a == h && w.slice(d + 1).addClass("disabled"), g = "", a = 10 * parseInt(a / 10, 10); var y = this.picker.find(".datepicker-years").find("th:eq(1)").text(a + "-" + (a + 9)).end().find("td"); a -= 1; for (var D = -1; 11 > D; D++) g += '<span class="year' + (-1 == D || 10 == D ? " old" : "") + (b == a ? " active" : "") + (r > a || a > h ? " disabled" : "") + '">' + a + "</span>", a += 1; y.html(g) }, updateNavArrows: function () { var t = new Date(this.viewDate), e = t.getUTCFullYear(), i = t.getUTCMonth(); switch (this.viewMode) { case 0: this.startDate !== -(1 / 0) && e <= this.startDate.getUTCFullYear() && i <= this.startDate.getUTCMonth() ? this.picker.find(".prev").css({ visibility: "hidden" }) : this.picker.find(".prev").css({ visibility: "visible" }), this.endDate !== 1 / 0 && e >= this.endDate.getUTCFullYear() && i >= this.endDate.getUTCMonth() ? this.picker.find(".next").css({ visibility: "hidden" }) : this.picker.find(".next").css({ visibility: "visible" }); break; case 1: case 2: this.startDate !== -(1 / 0) && e <= this.startDate.getUTCFullYear() ? this.picker.find(".prev").css({ visibility: "hidden" }) : this.picker.find(".prev").css({ visibility: "visible" }), this.endDate !== 1 / 0 && e >= this.endDate.getUTCFullYear() ? this.picker.find(".next").css({ visibility: "hidden" }) : this.picker.find(".next").css({ visibility: "visible" }) } }, click: function (i) { i.stopPropagation(), i.preventDefault(); var s = t(i.target).closest("span, td, th"); if (1 == s.length) switch (s[0].nodeName.toLowerCase()) { case "th": switch (s[0].className) { case "switch": this.showMode(1); break; case "prev": case "next": var a = n.modes[this.viewMode].navStep * ("prev" == s[0].className ? -1 : 1); switch (this.viewMode) { case 0: this.viewDate = this.moveMonth(this.viewDate, a); break; case 1: case 2: this.viewDate = this.moveYear(this.viewDate, a) } this.fill(); break; case "today": var o = new Date; o = e(o.getFullYear(), o.getMonth(), o.getDate(), 0, 0, 0), this.showMode(-2); var r = "linked" == this.todayBtn ? null : "view"; this._setDate(o, r) } break; case "span": if (!s.is(".disabled")) { if (this.viewDate.setUTCDate(1), s.is(".month")) { var l = s.parent().find("span").index(s); this.viewDate.setUTCMonth(l), this.element.trigger({ type: "changeMonth", date: this.viewDate }) } else { var h = parseInt(s.text(), 10) || 0; this.viewDate.setUTCFullYear(h), this.element.trigger({ type: "changeYear", date: this.viewDate }) } this.showMode(-1), this.fill() } break; case "td": if (s.is(".day") && !s.is(".disabled")) { var d = parseInt(s.text(), 10) || 1, h = this.viewDate.getUTCFullYear(), l = this.viewDate.getUTCMonth(); s.is(".old") ? 0 === l ? (l = 11, h -= 1) : l -= 1 : s.is(".new") && (11 == l ? (l = 0, h += 1) : l += 1), this._setDate(e(h, l, d, 0, 0, 0, 0)) } } }, _setDate: function (t, e) { e && "date" != e || (this.date = t), e && "view" != e || (this.viewDate = t), this.fill(), this.setValue(), this.element.trigger({ type: "changeDate", date: this.date }); var i; this.isInput ? i = this.element : this.component && (i = this.element.find("input")), i && (i.change(), !this.autoclose || e && "date" != e || this.hide()) }, moveMonth: function (t, e) { if (!e) return t; var i, s, n = new Date(t.valueOf()), a = n.getUTCDate(), o = n.getUTCMonth(), r = Math.abs(e); if (e = e > 0 ? 1 : -1, 1 == r) s = -1 == e ? function () { return n.getUTCMonth() == o } : function () { return n.getUTCMonth() != i }, i = o + e, n.setUTCMonth(i), (0 > i || i > 11) && (i = (i + 12) % 12); else { for (var l = 0; r > l; l++) n = this.moveMonth(n, e); i = n.getUTCMonth(), n.setUTCDate(a), s = function () { return i != n.getUTCMonth() } } for (; s() ;) n.setUTCDate(--a), n.setUTCMonth(i); return n }, moveYear: function (t, e) { return this.moveMonth(t, 12 * e) }, dateWithinRange: function (t) { return t >= this.startDate && t <= this.endDate }, keydown: function (t) { if (this.picker.is(":not(:visible)")) return void (27 == t.keyCode && this.show()); var e, i, s, n = !1; switch (t.keyCode) { case 27: this.hide(), t.preventDefault(); break; case 37: case 39: if (!this.keyboardNavigation) break; e = 37 == t.keyCode ? -1 : 1, t.ctrlKey ? (i = this.moveYear(this.date, e), s = this.moveYear(this.viewDate, e)) : t.shiftKey ? (i = this.moveMonth(this.date, e), s = this.moveMonth(this.viewDate, e)) : (i = new Date(this.date), i.setUTCDate(this.date.getUTCDate() + e), s = new Date(this.viewDate), s.setUTCDate(this.viewDate.getUTCDate() + e)), this.dateWithinRange(i) && (this.date = i, this.viewDate = s, this.setValue(), this.update(), t.preventDefault(), n = !0); break; case 38: case 40: if (!this.keyboardNavigation) break; e = 38 == t.keyCode ? -1 : 1, t.ctrlKey ? (i = this.moveYear(this.date, e), s = this.moveYear(this.viewDate, e)) : t.shiftKey ? (i = this.moveMonth(this.date, e), s = this.moveMonth(this.viewDate, e)) : (i = new Date(this.date), i.setUTCDate(this.date.getUTCDate() + 7 * e), s = new Date(this.viewDate), s.setUTCDate(this.viewDate.getUTCDate() + 7 * e)), this.dateWithinRange(i) && (this.date = i, this.viewDate = s, this.setValue(), this.update(), t.preventDefault(), n = !0); break; case 13: this.hide(), t.preventDefault(); break; case 9: this.hide() } if (n) { this.element.trigger({ type: "changeDate", date: this.date }); var a; this.isInput ? a = this.element : this.component && (a = this.element.find("input")), a && a.change() } }, showMode: function (t) { t && (this.viewMode = Math.max(0, Math.min(2, this.viewMode + t))), this.picker.find(">div").hide().filter(".datepicker-" + n.modes[this.viewMode].clsName).css("display", "block"), this.updateNavArrows() } }, t.fn.datepicker = function (e) { var s = Array.apply(null, arguments); return s.shift(), this.each(function () { var n = t(this), a = n.data("datepicker"), o = "object" == typeof e && e; a || n.data("datepicker", a = new i(this, t.extend({}, t.fn.datepicker.defaults, o))), "string" == typeof e && "function" == typeof a[e] && a[e].apply(a, s) }) }, t.fn.datepicker.defaults = {}, t.fn.datepicker.Constructor = i; var s = t.fn.datepicker.dates = { en: { days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"], daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa", "Su"], months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], today: "Today" } }, n = { modes: [{ clsName: "days", navFnc: "Month", navStep: 1 }, { clsName: "months", navFnc: "FullYear", navStep: 1 }, { clsName: "years", navFnc: "FullYear", navStep: 10 }], isLeapYear: function (t) { return t % 4 === 0 && t % 100 !== 0 || t % 400 === 0 }, getDaysInMonth: function (t, e) { return [31, n.isLeapYear(t) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][e] }, validParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g, nonpunctuation: /[^ -\/:-@\[\u3400-\u9fff-`{-~\t\n\r]+/g, parseFormat: function (t) { var e = t.replace(this.validParts, "\x00").split("\x00"), i = t.match(this.validParts); if (!e || !e.length || !i || 0 === i.length) throw new Error("Invalid date format."); return { separators: e, parts: i } }, parseDate: function (n, a, o) { if (n instanceof Date) return n; if (/^[\-+]\d+[dmwy]([\s,]+[\-+]\d+[dmwy])*$/.test(n)) { var r, l, h = /([\-+]\d+)([dmwy])/, d = n.match(/([\-+]\d+)([dmwy])/g); n = new Date; for (var c = 0; c < d.length; c++) switch (r = h.exec(d[c]), l = parseInt(r[1]), r[2]) { case "d": n.setUTCDate(n.getUTCDate() + l); break; case "m": n = i.prototype.moveMonth.call(i.prototype, n, l); break; case "w": n.setUTCDate(n.getUTCDate() + 7 * l); break; case "y": n = i.prototype.moveYear.call(i.prototype, n, l) } return e(n.getUTCFullYear(), n.getUTCMonth(), n.getUTCDate(), 0, 0, 0) } var p, u, r, d = n && n.match(this.nonpunctuation) || [], n = new Date, f = {}, m = ["yyyy", "yy", "M", "MM", "m", "mm", "d", "dd"], v = { yyyy: function (t, e) { return t.setUTCFullYear(e) }, yy: function (t, e) { return t.setUTCFullYear(2e3 + e) }, m: function (t, e) { for (e -= 1; 0 > e;) e += 12; for (e %= 12, t.setUTCMonth(e) ; t.getUTCMonth() != e;) t.setUTCDate(t.getUTCDate() - 1); return t }, d: function (t, e) { return t.setUTCDate(e) } }; v.M = v.MM = v.mm = v.m, v.dd = v.d, n = e(n.getFullYear(), n.getMonth(), n.getDate(), 0, 0, 0); var g = a.parts.slice(); if (d.length != g.length && (g = t(g).filter(function (e, i) { return -1 !== t.inArray(i, m) }).toArray()), d.length == g.length) { for (var c = 0, b = g.length; b > c; c++) { if (p = parseInt(d[c], 10), r = g[c], isNaN(p)) switch (r) { case "MM": u = t(s[o].months).filter(function () { var t = this.slice(0, d[c].length), e = d[c].slice(0, t.length); return t == e }), p = t.inArray(u[0], s[o].months) + 1; break; case "M": u = t(s[o].monthsShort).filter(function () { var t = this.slice(0, d[c].length), e = d[c].slice(0, t.length); return t == e }), p = t.inArray(u[0], s[o].monthsShort) + 1 } f[r] = p } for (var w, c = 0; c < m.length; c++) w = m[c], w in f && !isNaN(f[w]) && v[w](n, f[w]) } return n }, formatDate: function (e, i, n) { var a = { d: e.getUTCDate(), D: s[n].daysShort[e.getUTCDay()], DD: s[n].days[e.getUTCDay()], m: e.getUTCMonth() + 1, M: s[n].monthsShort[e.getUTCMonth()], MM: s[n].months[e.getUTCMonth()], yy: e.getUTCFullYear().toString().substring(2), yyyy: e.getUTCFullYear() }; a.dd = (a.d < 10 ? "0" : "") + a.d, a.mm = (a.m < 10 ? "0" : "") + a.m; for (var e = [], o = t.extend([], i.separators), r = 0, l = i.parts.length; l > r; r++) o.length && e.push(o.shift()), e.push(a[i.parts[r]]); return e.join("") }, headTemplate: '<thead><tr><th class="prev"><i class="icon-arrow-left"/></th><th colspan="5" class="switch"></th><th class="next"><i class="icon-arrow-right"/></th></tr></thead>', contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>', footTemplate: '<tfoot><tr><th colspan="7" class="today"></th></tr></tfoot>' }; n.template = '<div class="datepicker"><div class="datepicker-days"><table class=" table-condensed">' + n.headTemplate + "<tbody></tbody>" + n.footTemplate + '</table></div><div class="datepicker-months"><table class="table-condensed">' + n.headTemplate + n.contTemplate + n.footTemplate + '</table></div><div class="datepicker-years"><table class="table-condensed">' + n.headTemplate + n.contTemplate + n.footTemplate + "</table></div></div>", t.fn.datepicker.DPGlobal = n
}(window.jQuery), function (t) { var e = -1, i = -1, s = function (e) { var i = 1, s = t(e), a = null, o = []; return s.each(function () { var e = t(this), s = e.offset().top - n(e.css("margin-top")), r = o.length > 0 ? o[o.length - 1] : null; null === r ? o.push(e) : Math.floor(Math.abs(a - s)) <= i ? o[o.length - 1] = r.add(e) : o.push(e), a = s }), o }, n = function (t) { return parseFloat(t) || 0 }, a = function (e) { var i = { byRow: !0, remove: !1, property: "height" }; return "object" == typeof e ? t.extend(i, e) : ("boolean" == typeof e ? i.byRow = e : "remove" === e && (i.remove = !0), i) }, o = t.fn.matchHeight = function (e) { var i = a(e); if (i.remove) { var s = this; return this.css(i.property, ""), t.each(o._groups, function (t, e) { e.elements = e.elements.not(s) }), this } return this.length <= 1 ? this : (o._groups.push({ elements: this, options: i }), o._apply(this, i), this) }; o._groups = [], o._throttle = 80, o._maintainScroll = !1, o._beforeUpdate = null, o._afterUpdate = null, o._apply = function (e, i) { var r = a(i), l = t(e), h = [l], d = t(window).scrollTop(), c = t("html").outerHeight(!0), p = l.parents().filter(":hidden"); return p.each(function () { var e = t(this); e.data("style-cache", e.attr("style")) }), p.css("display", "block"), r.byRow && (l.each(function () { var e = t(this), i = "inline-block" === e.css("display") ? "inline-block" : "block"; e.data("style-cache", e.attr("style")), e.css({ display: i, "padding-top": "0", "padding-bottom": "0", "margin-top": "0", "margin-bottom": "0", "border-top-width": "0", "border-bottom-width": "0", height: "100px" }) }), h = s(l), l.each(function () { var e = t(this); e.attr("style", e.data("style-cache") || "") })), t.each(h, function (e, i) { var s = t(i), a = 0; return r.byRow && s.length <= 1 ? void s.css(r.property, "") : (s.each(function () { var e = t(this), i = "inline-block" === e.css("display") ? "inline-block" : "block", s = { display: i }; s[r.property] = "", e.css(s), e.outerHeight(!1) > a && (a = e.outerHeight(!1)), e.css("display", "") }), void s.each(function () { var e = t(this), i = 0; "border-box" !== e.css("box-sizing") && (i += n(e.css("border-top-width")) + n(e.css("border-bottom-width")), i += n(e.css("padding-top")) + n(e.css("padding-bottom"))), e.css(r.property, a - i) })) }), p.each(function () { var e = t(this); e.attr("style", e.data("style-cache") || null) }), o._maintainScroll && t(window).scrollTop(d / c * t("html").outerHeight(!0)), this }, o._applyDataApi = function () { var e = {}; t("[data-match-height], [data-mh]").each(function () { var i = t(this), s = i.attr("data-match-height") || i.attr("data-mh"); s in e ? e[s] = e[s].add(i) : e[s] = i }), t.each(e, function () { this.matchHeight(!0) }) }; var r = function (e) { o._beforeUpdate && o._beforeUpdate(e, o._groups), t.each(o._groups, function () { o._apply(this.elements, this.options) }), o._afterUpdate && o._afterUpdate(e, o._groups) }; o._update = function (s, n) { if (n && "resize" === n.type) { var a = t(window).width(); if (a === e) return; e = a } s ? -1 === i && (i = setTimeout(function () { r(n), i = -1 }, o._throttle)) : r(n) }, t(o._applyDataApi), t(window).bind("load", function (t) { o._update(!1, t) }), t(window).bind("resize orientationchange", function (t) { o._update(!0, t) }) }(jQuery);